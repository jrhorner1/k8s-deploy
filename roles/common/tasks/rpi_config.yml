---
- name: set gpu_mem
  lineinfile:
    path: '{{ common_rpi_config_file }}'
    state: present
    regexp: '^gpu_mem'
    line: 'gpu_mem={{ common_rpi_gpu_memory }}'
  notify: reboot hosts

- name: 'overclock : set over_volatage (1/2)'
  lineinfile:
    path: '{{ common_rpi_config_file }}'
    state: present
    regexp: '^over_voltage'
    line: 'over_voltage={{ common_rpi_overvoltage }}'
  when: common_rpi_overclock
  notify: reboot hosts

- name: 'overclock : set arm_freq (2/2)'
  lineinfile:
    path: '{{ common_rpi_config_file }}'
    state: present
    regexp: '^arm_freq'
    line: 'arm_freq={{ common_rpi_arm_frequency }}'
  when: common_rpi_overclock
  notify: reboot hosts

- name: 'poe fan settings'
  lineinfile:
    path: '{{ common_rpi_config_file }}'
    state: present
    regexp: "^dtparam={{ item.name }}"
    line: "dtparam={{ item.name }}={{ item.value }}"
  when: common_rpi_poe_hat
  loop:
    - { name: 'poe_fan_temp0', value: "{{ common_rpi_poe_fan_temp0 }}"}
    - { name: 'poe_fan_temp1', value: "{{ common_rpi_poe_fan_temp1 }}"}
    - { name: 'poe_fan_temp2', value: "{{ common_rpi_poe_fan_temp2 }}"}
    - { name: 'poe_fan_temp3', value: "{{ common_rpi_poe_fan_temp3 }}"}
  notify: reboot hosts

# Adding required CRI/Kubernetes cgroups
- name: create the nobtcmd.txt file if it does not exist
  become: true
  file: 
    path: /boot/firmware/nobtcmd.txt
    state: touch
  when: ansible_architecture | regex_search('arm|aarch')

- name: enable required cgroup features
  lineinfile:
    path: '{{ common_rpi_cmd_file }}'
    state: present
    backrefs: true
    regexp: '^(.*fixrtc)$'
    line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory swapaccount=1'
  notify: reboot hosts
  when: ansible_architecture | regex_search('arm|aarch')