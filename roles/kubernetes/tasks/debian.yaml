---
# Instructions: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl
- name: add apt signing key for kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: adding apt repository for kubernetes
  apt_repository:
    repo: deb http://packages.cloud.google.com/apt/ kubernetes-xenial main
    state: present
  register: kubernetes_repository
  retries: 10
  until: kubernetes_repository is success

- name: install kubernetes packages
  apt:
    name: 
      - kubelet={{ kubernetes_kubelet_version }}
      - kubeadm={{ kubernetes_kubeadm_version }}
      - kubectl={{ kubernetes_kubectl_version }}
    state: present
    force: yes
    update_cache: yes
  register: apt_install_kube
  retries: 5
  until: apt_install_kube is success

- name: add apt-mark hold to avoid version skew issues
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - 'kubelet'
    - 'kubeadm'
    - 'kubectl'

# Instructions: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#ensure-tooling-does-not-use-the-nftables-backend
- name: install iptable packages
  apt:
    name:
      - ebtables
      - arptables
    install_recommends: false
    update_cache: yes
    force_apt_get: yes
  register: apt_install_iptables
  retries: 5
  until: apt_install_iptables is success

- name: use aprtables-legacy
  alternatives:
    name: arptables 
    path: /usr/sbin/arptables-legacy
  failed_when: false

- name: use ebtables-legacy
  alternatives: 
    name: ebtables
    path: /usr/sbin/ebtables-legacy
  failed_when: false

- name: use iptables-legacy
  alternatives:
    name: iptables
    path: /usr/sbin/iptables-legacy
  failed_when: false

- name: use ip6tables-legacy
  alternatives:
    name: ip6tables
    path: /usr/sbin/ip6tables-legacy
  failed_when: false

# Set /proc/sys/net/bridge/bridge-nf-call-iptables to 1 by running
# sysctl net.bridge.bridge-nf-call-iptables=1 to pass bridged IPv4 traffic to iptables' chains.
# This is a requirement for some CNI plugins to work.
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#letting-iptables-see-bridged-traffic
- name: Update bridged IPv4 traffic to iptables' chains
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf

- name: Update bridged IPv4 traffic to ip6tables' chains
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf

- name: Update bridged IPv4 traffic to arptables' chains
  sysctl:
    name: net.bridge.bridge-nf-call-arptables
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf

# Required for containerd CRI prerequisites
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#prerequisites-1
- name: Update bridged IPv4 traffic forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf